from math import sqrt

def gcd(a, b):
    while b:
        a,b = b, a%b
    return a

aoc = []
with open("input.txt", "r") as f:
    lines = f.read().split("\n")
    lines.pop(len(lines)-1)
    for l in lines:
        aoc.append([i for i in l])

def distance(a,b):
    x1,y1 = a
    x2,y2 = b
    return sqrt((x1-x2)**2 + (y1-y2)**2)

def generate_opairs(x):
    opairs = []
    for i in range(len(x)):
        for j in range(len(x)):
            if i != j:
                opairs.append((x[i],x[j]))

    return opairs

def colinear(a, b, grid, positions):
    x1,y1 = a
    x2,y2 = b

    dx = x2-x1
    dy = y2-y1

    delta = gcd(dy,dx)
    deltay = int(dy / delta)
    deltax = int(dx / delta)

    ret = 0
    
    X1 = x1
    Y1 = y1
    while X1 >= 0 and X1 < len(grid) and Y1 >= 0 and Y1 < len(grid[0]):
        X1+=deltax
        Y1+=deltay
        if distance((X1,Y1),(x1,y1)) == 2*distance((x1,y1),(x2,y2)) and (X1,Y1) not in positions and X1 >= 0 and Y1 >= 0 and X1 < len(grid) and Y1 < len(grid[0]):
            ret+=1
            positions.append((X1,Y1))
            print((X1,Y1))
            grid[X1][Y1] = "#"

    x = x1
    y = y1
    while x >= 0 and x < len(grid) and y >= 0 and y < len(grid[0]): 
        x-=deltax
        y-=deltay
        if distance((x,y),(x1,y1)) == distance((x1,y1),(x2,y2)) and (x,y) not in positions and x >= 0 and y >= 0 and x < len(grid) and y < len(grid[0]):
            ret+=1
            positions.append((x,y))
            print((x,y))
            grid[x][y] = "#"

    return ret



def part1(aoc):
    positions = []
    total = 0
    keys = {}
    for i in range(len(aoc)):
        for j in range(len(aoc[0])):
            try:
                if aoc[i][j] != "." and aoc[i][j] != "#": 
                    if keys[aoc[i][j]] != None:
                        keys[aoc[i][j]].append((i,j))
            except KeyError:
                keys[aoc[i][j]] = [(i,j)]

    for key,value in keys.items():
        opairs = generate_opairs(value)
        print(opairs)
        for opair in opairs:
            o1, o2 = opair
            total+=colinear(o1,o2,aoc,positions)

    return total
test = """
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""

ok = test.split("\n")
ok.pop(len(ok)-1)
ok.pop(0)
gwid = []
for i in ok:
    hi = []
    for j in i:
        hi.append(j)
    gwid.append(hi)

def print_grid(grid):
    for i in grid:
        for j in i:
            print(j, end='')
        print("")

print(part1(gwid))
print_grid(gwid)

